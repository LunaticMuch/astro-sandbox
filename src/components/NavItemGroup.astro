---
import * as path from 'path';
import NavItemBadge from "./NavItemBadge.astro";
import type { SidebarItem } from '../schemas/sidebar';
const { item } = Astro.props;

// This function ensures any URL ends with just one trailing slash
function sanitizePath(linkPath: string): string {
	// Adds leading and traling slases, the normalize the result.
	// Result is guaranteed to have the /a/b/c/d/ format
	return path.normalize('/' + linkPath + '/')
}

// This function infers if the path on the URL is the same as in the sidebar links
function iscurrentPath(linkPath: string): boolean {
	return sanitizePath(Astro.url.pathname) === sanitizePath(linkPath);
}

// This function parses the URL pathname and return true if the URL is included somewhere in the nested object
function deepFind(group: any, location: string): boolean {
    if (!Array.isArray(group)) group = [group]
    const parseSlug = (o: { items?: any; link?: any; } ) => o.link === location
    return group.some((item: { items: any; }) => item.items ? deepFind(item.items, location) : parseSlug(item))
  }

function setChecked(item: SidebarItem[]) {
	const currentPath = Astro.url.pathname;
	return deepFind(item, currentPath);
}
---

<label class="cursor-pointer">
	<input
		type="checkbox"
		class="peer hidden cursor-pointer select-none rounded-lg bg-slate-500 ease-in-out"
		checked={setChecked(item)}
	/>
	<div class="flex items-center justify-between group hover:bg-pink-300">
		<span>{item.label}</span>
		<svg
			xmlns="http://www: { items: any; link: string | URL | null | undefined; label: unknown; }: { items: any; link: string | URL | null | undefined; label: unknown; }.w3.org/2000/svg"
			fill="none"
			viewBox="0 0 24 24"
			stroke-width="1.5"
			stroke="currentColor"
			class="h-4 w-4 group-[:checked+&]:rotate-90"
		>
			<path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5"
			></path></svg
		>
	</div>
	<div class="relative hidden pl-4 peer-checked:block">
		{
			item.items.map((i) =>
				i.items ? (
					<Astro.self item={i} />
				) : (
					<div class={`hover:bg-pink-300 ${iscurrentPath(i.link) && 'font-bold'}`}>
						<a href={i.link}>{i.label}</a>{item.badge && <NavItemBadge badge={item.badge} />}
					</div>
				)
			)
		}
	</div>
</label>
